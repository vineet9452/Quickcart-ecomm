
"use client";

import { useEffect, useState } from "react";
import AdminMenu from "@/app/components/Layout/AdminMenu";
import axios from "axios";
import toast from "react-hot-toast";
import Link from "next/link";
import Image from "next/image";

const Products = () => {
  const [products, setProducts] = useState([]); // ‚úÖ ‡§∏‡§≠‡•Ä Products ‡§ï‡•ã Store ‡§ï‡§∞‡•á‡§Ç
  const [pageNumber, setPageNumber] = useState(1); // ‚úÖ ‡§™‡•á‡§ú ‡§®‡§Ç‡§¨‡§∞ Track ‡§ï‡§∞‡•á‡§Ç
  const [hasMore, setHasMore] = useState(true); // ‚úÖ ‡§Ö‡§ó‡§∞ ‡§î‡§∞ ‡§™‡•ç‡§∞‡•ã‡§°‡§ï‡•ç‡§ü‡•ç‡§∏ Available ‡§π‡•à‡§Ç ‡§§‡•ã True

  // ‚úÖ API ‡§∏‡•á ‡§°‡•á‡§ü‡§æ Fetch ‡§ï‡§∞‡•á‡§Ç
  const getAllProducts = async () => {
    try {
      const { data } = await axios.get(
        `${process.env.NEXT_PUBLIC_API_URL}/api/products/product-list/${pageNumber}`
      );

      if (data.products.length === 0) {
        setHasMore(false); // ‚ùå ‡§Ö‡§ó‡§∞ ‡§™‡•ç‡§∞‡•ã‡§°‡§ï‡•ç‡§ü‡•ç‡§∏ ‡§ñ‡§§‡•ç‡§Æ ‡§π‡•ã ‡§ó‡§è ‡§§‡•ã Load More ‡§π‡§ü‡§æ‡§è‡§Å
      } else {
        setProducts((prev) => [...prev, ...data.products]); // ‚úÖ ‡§™‡•Å‡§∞‡§æ‡§®‡•á Products ‡§Æ‡•á‡§Ç ‡§®‡§è ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
        setPageNumber((prev) => prev + 1); // ‚úÖ ‡§™‡•á‡§ú ‡§®‡§Ç‡§¨‡§∞ ‡§¨‡§¢‡§º‡§æ‡§è‡§Å
      }
    } catch (error) {
      console.error(error);
      toast.error("Something went wrong!");
    }
  };

  // ‚úÖ ‡§™‡§π‡§≤‡•Ä ‡§¨‡§æ‡§∞ ‡§™‡•á‡§ú ‡§≤‡•ã‡§° ‡§π‡•ã‡§®‡•á ‡§™‡§∞ Products ‡§≤‡§æ‡§è‡§Å
  useEffect(() => {
    getAllProducts();
  }, []);

  return (
    <>
      <div className="row">
        <div className="col-md-3">
          <AdminMenu />
        </div>
        <div className="col-md-9">
          <h1 className="text-center">All Products List</h1>

          {/* ‚úÖ Cards Container */}
          <div className="d-flex flex-wrap justify-content-between">
            {products.length > 0 ? (
              products.map((p) => {
                const isOutOfStock = p.quantity === 0; // ‚úÖ Stock Check
                const isShippingAvailable = p.shipping && !isOutOfStock; // ‚úÖ ‡§Ö‡§ó‡§∞ Out of Stock ‡§π‡•à ‡§§‡•ã Shipping ‡§≠‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§ó‡•Ä

                return (
                  <Link
                    key={p._id}
                    href={`/dashboard/admin/update-product/${p.slug}`}
                    className="product-link"
                    style={{ textDecoration: "none", color: "inherit" }}
                  >
                    <div
                      className="card product-card"
                      style={{
                        width: "14rem", // ‚úÖ Card Width ‡§õ‡•ã‡§ü‡§æ ‡§ï‡§ø‡§Ø‡§æ
                        cursor: "pointer",
                        transition: "0.3s",
                        marginBottom: "20px",
                      }}
                    >
                      <Image
                        src={`http://localhost:3000/api/products/product-photo/${
                          p._id
                        }?t=${new Date().getTime()}`}
                        alt="Product Image"
                        width={224} // ‚úÖ Image Width 14rem (224px) ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§∏‡•á‡§ü ‡§ï‡§ø‡§Ø‡§æ
                        height={224}
                        style={{ objectFit: "contain" }}
                        unoptimized={true}
                        priority={true}
                      />
                      <div className="card-body text-center">
                        <h6 className="card-title">{p.name}</h6>
                        <p className="text-muted" style={{ fontSize: "14px" }}>
                          Price: ‚Çπ{p.price}
                        </p>

                        {/* ‚úÖ Stock Information */}
                        <p
                          style={{
                            fontSize: "13px",
                            fontWeight: "bold",
                            color: isOutOfStock ? "red" : "green",
                          }}
                        >
                          {isOutOfStock
                            ? "Out of Stock"
                            : `Stock: ${p.quantity}`}
                        </p>

                        {/* ‚úÖ Shipping Information */}
                        <p
                          style={{
                            fontSize: "13px",
                            color: isShippingAvailable ? "blue" : "gray",
                          }}
                        >
                          {isShippingAvailable
                            ? "üöö Shipping Available"
                            : "üö´ No Shipping"}
                        </p>

                        {/* ‚úÖ "Update Product" ‡§¨‡§ü‡§® */}
                        <button className="btn btn-warning btn-sm w-100">
                          ‚úèÔ∏è Update
                        </button>
                      </div>
                    </div>
                  </Link>
                );
              })
            ) : (
              <p className="text-center w-100">No products available!</p>
            )}
          </div>

          {/* ‚úÖ Load More Button */}
          {hasMore && (
            <div className="text-center my-4">
              <button onClick={getAllProducts} className="btn btn-primary">
                Load More
              </button>
            </div>
          )}
        </div>
      </div>

      {/* ‚úÖ CSS */}
      <style jsx>{`
        .product-card:hover {
          background-color: #f8f9fa;
          transform: scale(1.03);
        }

        @media (max-width: 1200px) {
          .product-card {
            width: 18%; /* ‚úÖ 5 Cards in a Row */
          }
        }

        @media (max-width: 992px) {
          .product-card {
            width: 22%; /* ‚úÖ 4 Cards in a Row */
          }
        }

        @media (max-width: 768px) {
          .product-card {
            width: 30%; /* ‚úÖ 3 Cards in a Row */
          }
        }

        @media (max-width: 576px) {
          .product-card {
            width: 45%; /* ‚úÖ 2 Cards in a Row */
          }
        }
      `}</style>
    </>
  );
};

export default Products;
