

import mongoose from "mongoose";

const MONGODB_URI = process.env.MONGODB_URI; // ‚úÖ Backend-Only Variable

if (!MONGODB_URI) {
  throw new Error("‚ùå MONGODB_URI is not defined in environment variables");
}

// ‚úÖ Global Caching (Next.js Serverless ‡§ï‡•á ‡§≤‡§ø‡§è)
let cached = globalThis.mongoose || { conn: null, promise: null };

const connectDB = async () => {
  if (cached.conn) {
    console.log("üìå Using existing MongoDB connection");
    return cached.conn;
  }

  if (!cached.promise) {
    console.log("‚è≥ Connecting to MongoDB...");
    cached.promise = mongoose.connect(MONGODB_URI, {
      bufferCommands: false, // ‚úÖ Serverless ‡§Æ‡•á‡§Ç Performance ‡§¨‡•á‡§π‡§§‡§∞ ‡§π‡•ã‡§ó‡•Ä
      autoIndex: false, // ‚úÖ Auto Indexing ‡§∏‡•á Performance Issue ‡§¨‡§ö‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è
      serverSelectionTimeoutMS: 10000, // ‚úÖ 10 ‡§∏‡•á‡§ï‡§Ç‡§° ‡§§‡§ï Wait ‡§ï‡§∞‡•á‡§ó‡§æ
    });
  }

  try {
    cached.conn = await cached.promise;
    console.log("‚úÖ MongoDB Connected Successfully");
    return cached.conn;
  } catch (error) {
    console.error("‚ùå MongoDB Connection Failed:", error.message);
    throw new Error("Database connection failed");
  }
};

// ‚úÖ Global Caching (Development Mode ‡§Æ‡•á‡§Ç)
if (process.env.NODE_ENV !== "production") {
  globalThis.mongoose = cached;
}

export default connectDB;
